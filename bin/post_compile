#!/usr/bin/env bash
set -eo pipefail

echo "-----> Running post-compile hook"

# Print environment and directory structure for debugging
echo "Current directory: $(pwd)"
echo "Directory contents:"
ls -la

echo "Project directory contents:"
ls -la afro_renaissance/

echo "Python path:"
which python
python --version

echo "PYTHONPATH: $PYTHONPATH"
echo "HOME: $HOME"

echo "All Python files in current directory:"
find . -name "*.py" -maxdepth 2

echo "All files in current directory (recursive):"
find . -type f

echo "Checking if manage.py exists:"
if [ -f "manage.py" ]; then
    echo "manage.py found in current directory"
else
    echo "manage.py not found in current directory"
    echo "Creating manage.py..."
    cat > manage.py << 'EOF'
#!/usr/bin/env python
"""Django's command-line utility for administrative tasks."""
import os
import sys

def main():
    """Run administrative tasks."""
    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'afro_renaissance.settings')
    try:
        from django.core.management import execute_from_command_line
    except ImportError as exc:
        raise ImportError(
            "Couldn't import Django. Are you sure it's installed?"
        ) from exc
    execute_from_command_line(sys.argv)

if __name__ == '__main__':
    main()
EOF
    chmod +x manage.py
    echo "Created manage.py"
fi

# Create necessary directories
mkdir -p staticfiles mediafiles

# Run migrations
echo "-----> Running database migrations"
python manage.py migrate --noinput

# Collect static files
echo "-----> Collecting static files"
python manage.py collectstatic --noinput

# Create superuser if needed
echo "-----> Creating superuser if not exists"
python manage.py shell << EOF
from django.contrib.auth.models import User
if not User.objects.filter(username='${DJANGO_SUPERUSER_USERNAME}').exists():
    User.objects.create_superuser('${DJANGO_SUPERUSER_USERNAME}', '${DJANGO_SUPERUSER_EMAIL}', '${DJANGO_SUPERUSER_PASSWORD}')
    print('Superuser created successfully')
else:
    print('Superuser already exists')
EOF

echo "-----> Post-compile hook completed"